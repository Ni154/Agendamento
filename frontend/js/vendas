/* API_BASE guard */
var API_BASE = (typeof API_BASE !== 'undefined' && API_BASE) ? API_BASE : `${location.protocol}//${location.host}`;
const API_V = API_BASE + '/api/vendas';
const API_P = API_BASE + '/api/produtos';
const API_S = API_BASE + '/api/servicos';
const API_C = API_BASE + '/api/clientes'; // se não existir endpoint, deixará a lista vazia

function $(s){return document.querySelector(s)}
function el(html){const d=document.createElement('div'); d.innerHTML=html.trim(); return d.firstChild;}
async function rq(u,o={}){const r=await fetch(u,{headers:{'Content-Type':'application/json'},...o});const d=await r.json().catch(()=>null);return{r,d};}

async function fillClientes(){
  const sel = $('#ven_cliente'); if(!sel) return;
  try{
    const {d} = await rq(API_C);
    const items = (d && d.items) || [];
    sel.innerHTML = `<option value="">(Sem cliente)</option>` + items.map(c=>`<option value="${c.id}">${c.nome||c.name}</option>`).join('');
  }catch(_){
    sel.innerHTML = `<option value="">(Sem cliente)</option>`;
  }
}
async function fillProdutos(select){ const {d}=await rq(API_P); const items=(d&&d.items)||[]; select.innerHTML = `<option value="">—</option>` + items.map(p=>`<option value="${p.id}">${p.nome}</option>`).join(''); }
async function fillServicos(select){ const {d}=await rq(API_S); const items=(d&&d.items)||[]; select.innerHTML = `<option value="">—</option>` + items.map(s=>`<option value="${s.id}">${s.nome}</option>`).join(''); }

function addItemRow(){
  const wrap = $('#ven_itens');
  const row = el(`
    <div class="row" style="gap:8px;align-items:center">
      <select class="sel-tipo">
        <option value="produto">Produto</option>
        <option value="servico">Serviço</option>
      </select>
      <select class="sel-prod" style="min-width:220px"></select>
      <select class="sel-serv" style="min-width:220px; display:none"></select>
      <input type="number" class="num-qtd" min="0" step="0.01" placeholder="Qtde"/>
      <input type="number" class="num-preco" min="0" step="0.01" placeholder="Preço unit."/>
      <button type="button" class="btn btn-del">−</button>
    </div>
  `);
  const tipo = row.querySelector('.sel-tipo');
  const selP = row.querySelector('.sel-prod');
  const selS = row.querySelector('.sel-serv');

  tipo.onchange = ()=>{
    const isProd = tipo.value === 'produto';
    selP.style.display = isProd ? '' : 'none';
    selS.style.display = isProd ? 'none' : '';
  };
  row.querySelector('.btn-del').onclick = ()=> row.remove();

  wrap.appendChild(row);
  fillProdutos(selP); fillServicos(selS);
}

function calcTotal(){
  let t = 0;
  document.querySelectorAll('#ven_itens .row').forEach(r=>{
    const q = parseFloat(r.querySelector('.num-qtd')?.value||0);
    const p = parseFloat(r.querySelector('.num-preco')?.value||0);
    t += q*p;
  });
  const elTot = $('#ven_total'); if(elTot) elTot.textContent = `R$ ${t.toFixed(2)}`;
  return t;
}

async function saveVenda(e){
  e?.preventDefault();
  const forma = ($('#ven_pgto')?.value||'').toLowerCase();
  if (!forma) return alert('Selecione a forma de pagamento.');

  const itens = Array.from(document.querySelectorAll('#ven_itens .row')).map(r=>{
    const tipo = r.querySelector('.sel-tipo')?.value;
    const pid  = parseInt(r.querySelector('.sel-prod')?.value||0) || null;
    const sid  = parseInt(r.querySelector('.sel-serv')?.value||0) || null;
    const qtd  = parseFloat(r.querySelector('.num-qtd')?.value||0);
    const pu   = parseFloat(r.querySelector('.num-preco')?.value||0);
    return {
      produto_id: (tipo==='produto') ? pid : null,
      servico_id: (tipo==='servico') ? sid : null,
      qtd: qtd, preco_unit: pu
    };
  }).filter(i=> (i.produto_id || i.servico_id) && i.qtd>0);

  if (!itens.length) return alert('Inclua ao menos um item.');

  const payload = {
    cliente_id: parseInt($('#ven_cliente')?.value||0) || null,
    forma_pagamento: forma,
    itens
  };

  const {r,d} = await rq(API_V, {method:'POST', body: JSON.stringify(payload)});
  if(!r.ok) return alert((d&&d.error)||'Erro ao registrar venda');

  e.target?.reset();
  $('#ven_itens').innerHTML=''; addItemRow(); calcTotal();
  loadVendas();
}

async function loadVendas(){
  const box = $('#venLista'); if(!box) return;
  const {d}=await rq(API_V); const items=(d&&d.items)||[];
  if(!items.length){ box.innerHTML='<div class="muted">Nenhuma venda.</div>'; return; }
  box.innerHTML = items.map(v=>`
    <div class="row">
      <div><strong>#${v.id}</strong> — ${v.forma_pagamento.toUpperCase()} • Total: R$ ${v.total.toFixed(2)} <br/><small>${new Date(v.criado_em).toLocaleString()}</small></div>
    </div>
  `).join('');
}

document.getElementById('formVenda')?.addEventListener('submit', saveVenda);
document.getElementById('ven_itens')?.addEventListener('input', (e)=>{ if(e.target.classList.contains('num-qtd')||e.target.classList.contains('num-preco')) calcTotal(); });
document.getElementById('btnAddItemVenda')?.addEventListener('click', ()=>{ addItemRow(); });
document.addEventListener('DOMContentLoaded', ()=>{ fillClientes(); addItemRow(); loadVendas(); });
